/// ============================================================================
/// @file           Themes and theming mixins.
/// ============================================================================

@use "sass:map";
@use "sass:string";
@use "light";
@use "dark";

$themes: (
    light: light.$theme,
    dark: dark.$theme,
) !default;

/// Allows access to themes and theme variables.
/// Modified from https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1
/// @param {Boolean} $self [false] whether to apply styles to the current element
/// @content styles to apply to each theme
@mixin themify($self: false) {
    @each $theme, $map in $themes {
        $selector: if(
            $self,
            "&[data-md-theme='#{$theme}']",
            "[data-md-theme='#{$theme}'] &"
        );

        #{$selector} {
            $theme-map: () !global;

            @each $key, $submap in $map {
                $value: map.get(map.get($themes, $theme), "#{$key}");
                $theme-map: map.merge(
                    $theme-map,
                    (
                        $key: $value,
                    )
                ) !global;
            }

            @content;

            $theme-map: null !global;
        }
    }
}

/// Gets a color from the current theme.
/// @param {string} $key color name
/// @return {color} color from the current theme
@function color($key) {
    $result: map.get($theme-map, $key);

    @return if($result, $result, $key);
}

/// Changes the background and text color based on a theme container color.
/// @param {string} $container-color color with -container suffix
/// @param {Boolean} $important [false] whether to set each style to important
@mixin colorify($container-color, $important: false) {
    $on-color: "on-#{$container-color}";

    @if string.index($container-color, "surface-container") {
        $on-color: "on-surface";
    } @else if $container-color == "inverse-surface" {
        $on-color: "inverse-on-surface";
    }

    background-color: color($container-color) if($important, !important, null);
    color: color($on-color) if($important, !important, null);
}
