@use "functions" as *;
@use "sys" as *;
@use "../themes";

@mixin font-styling($typescale) {
    $font: sys("typescale", $typescale);

    font-family: map-get($font, "font");
    line-height: map-get($font, "line-height");
    size: map-get($font, "size");
    font-weight: map-get($font, "weight");
    letter-spacing: map-get($font, "tracking");

    &--prominent {
        font-weight: map-get($font, "weight-prominent");
    }
}

@mixin font($type) {
    &--large {
        @include font-styling("#{$type}-large");
    }

    &--medium {
        @include font-styling("#{$type}-medium");
    }

    &--small {
        @include font-styling("#{$type}-small");
    }
}

@mixin mix-colors($default, $states) {
    color: $states;
    background-color: $default;

    &:hover {
        background-color: mix(
            $default,
            $states,
            opacity(sys("state", "hover", "state-layer-opacity"))
        );
    }

    &:focus {
        background-color: mix(
            $default,
            $states,
            opacity(sys("state", "focus", "state-layer-opacity"))
        );
    }

    &:active {
        background-color: mix(
            $default,
            $states,
            opacity(sys("state", "pressed", "state-layer-opacity"))
        );
    }
}

@mixin elevation($elevation) {
    $offset: sys("elevation", "level#{$elevation}");
    box-shadow: rgba(themes.color("shadow"), 0.2) 0 $offset floor($offset * 1.5)
        0;
}

@mixin indicator($color, $height) {
    box-shadow: inset 0px $height * -1 0px 0px $color;
}

@mixin toggle-styling($disabled-overrides: ()) {
    &:disabled {
        @if (not map-has-key($disabled-overrides, "background-color")) {
            background-color: rgba(
                themes.color("on-surface"),
                sys("state", "disabled", "container-opacity")
            );
        }

        @if (not map-has-key($disabled-overrides, "color")) {
            color: rgba(
                themes.color("on-surface"),
                sys("state", "disabled", "label-opacity")
            );
        }

        @if ($disabled-overrides) {
            @each $property, $value in $disabled-overrides {
                #{$property}: #{$value};
            }
        }
    }

    &:not(:disabled) {
        @content;
    }
}
